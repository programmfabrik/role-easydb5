# FIXME: we need a naming scheme, proposing  "easydb_<component>_<something>"
#        e.g. "easydb_es_memory_size" or "easydb_srv_external_user_schema"

skip_customer: false
easydb_has_old_master_config: yes

# docker
easydb_proxy_url: ''
easydb_docker_user: ''
easydb_docker_pass: ''
easydb_docker_registry: docker.easydb.de
easydb_container_network: easydb5
easydb_etc_hosts: {}
# docker container names
easydb_server_container_name: easydb-server
easydb_pgsql_container_name: easydb-pgsql
easydb_eas_container_name: easydb-eas
easydb_fylr_container_name: easydb-fylr
easydb_elasticsearch_container_name: easydb-elasticsearch
easydb_webfrontend_container_name: easydb-webfrontend
easydb_chrome_container_name: easydb-chrome

### ENDPOINTS ###
# PGSQL
easydb_pgsql_hostname: "{{ easydb_pgsql_container_name }}"
easydb_pgsql_port_int: 5432
easydb_pgsql_port_ext: 15432
# FYLR
easydb_fylr_hostname: "{{ easydb_fylr_container_name }}"
easydb_fylr_port_int: 4000
easydb_fylr_port_ext: 4000
# EAS
easydb_eas_hostname: "{{ easydb_eas_container_name }}"
easydb_eas_port_int: 80
easydb_eas_port_ext: 83
easydb_eas_disable_apache_mmap: false
# SERVER
easydb_server_hostname: "{{ easydb_server_container_name }}"
easydb_server_port_int: 80
easydb_server_port_ext: 82
# WEBFRONTEND
easydb_webfrontend_hostname: "{{ easydb_webfrontend_container_name }}"
easydb_webfrontend_port_int: 80
easydb_webfrontend_port_ext: 81
# ELASTICSEARCH
easydb_elasticsearch_hostname: "{{ easydb_elasticsearch_container_name }}"
easydb_elasticsearch_port_int: 9200
easydb_elasticsearch_port_ext: 9200
easydb_elasticsearch_cluster_port_int: 9300
easydb_elasticsearch_cluster_port_ext: 9300

# paths
easydb_basedir: /srv/easydb
easydb_volume_config: "{{ easydb_basedir }}/config"
easydb_eas_volume_assets: "{{ easydb_basedir }}/eas/lib/assets"
easydb_eas_volume_log: "{{ easydb_basedir }}/eas/log"
easydb_eas_volume_tmp: "{{ easydb_basedir }}/eas/tmp"
easydb_elasticsearch_volume_var: "{{ easydb_basedir }}/elasticsearch/var"
easydb_pgsql_volume_backup: "{{ easydb_basedir }}/pgsql/backup"
easydb_pgsql_volume_etc: "{{ easydb_basedir }}/pgsql/etc"
easydb_pgsql_volume_lib: "{{ easydb_basedir }}/pgsql/var"
easydb_pgsql_volume_log: "{{ easydb_basedir }}/pgsql/log"
easydb_server_volume_nginx_log: "{{ easydb_basedir }}/easydb-server/nginx-log"
easydb_server_volume_var: "{{ easydb_basedir }}/easydb-server/var"
easydb_server_volume_hotfolder: "{{ easydb_basedir }}/easydb-server/hotfolder"
easydb_flyr_volume_objectstore: "{{ easydb_basedir }}/fylr/objectstore"

# `deploy_these` defines which containers should be deployed in this run.
# By default all containers are deployed, but perhaps you only want to start
# containers across multiple hosts.
easydb_containers_deploy_these:
  - pgsql
  - server
  - eas
  - easydb
  - elasticsearch
  - webfrontend
  - chrome
  - testzeile

# container configuration
easydb_docker_postgres_package: '/pf/postgresql-11'
easydb_containers:
  pgsql:
    image: "{{ easydb_docker_registry }}{{ easydb_docker_postgres_package }}"
    container_name: "{{ easydb_pgsql_container_name }}"
    volumes:
      - "{{ easydb_volume_config }}:/config"
      - "{{ easydb_pgsql_volume_backup }}:/backup"
      - "{{ easydb_pgsql_volume_etc }}:/etc/postgresql"
      - "{{ easydb_pgsql_volume_log }}:/var/log/postgresql"
      - "{{ easydb_pgsql_volume_lib }}:/var/lib/postgresql"
    ports:
      - "{{ (easydb_pgsql_hostname == 'easydb-pgsql') | ternary(['127.0.0.1', easydb_pgsql_port_ext, easydb_pgsql_port_int] | join(':'), ['0.0.0.0', easydb_pgsql_port_ext, easydb_pgsql_port_int] | join(':')) }}"
    configs:
      src: pgsql
      dest: pgsql
  server:
    image: "{{ easydb_docker_registry }}/pf/server-{{ easydb_solution }}"
    container_name: "{{ easydb_server_container_name }}"
    volumes:
      - "{{ easydb_volume_config }}:/config"
      - "{{ easydb_server_volume_var }}:/easydb-5/var"
      - "{{ easydb_server_volume_nginx_log }}:/var/log/nginx"
      - "{{ easydb_server_volume_hotfolder }}:/hotfolder"
    ports:
      - "{{ (easydb_server_hostname.startswith('easydb-server')) | ternary(['127.0.0.1', easydb_server_port_ext, easydb_server_port_int] | join(':'), ['0.0.0.0', easydb_server_port_ext, easydb_server_port_int] | join(':')) }}"
    configs:
      src: server
      dest: easydb-server
    capabilities:
      - SYS_PTRACE
  eas:
    image: "{{ easydb_docker_registry }}/pf/eas"
    container_name: "{{ easydb_eas_container_name }}"
    volumes:
      - "{{ easydb_volume_config }}:/config"
      - "{{ easydb_eas_volume_assets }}:/var/opt/easydb/lib/eas/assets"
      - "{{ easydb_eas_volume_log }}:/var/opt/easydb/log/eas"
      - "{{ easydb_eas_volume_tmp }}:/tmp"
    ports:
      - "{{ (easydb_eas_hostname == 'easydb-eas') | ternary(['127.0.0.1', easydb_eas_port_ext, easydb_eas_port_int] | join(':'), ['0.0.0.0', easydb_eas_port_ext, easydb_eas_port_int] | join(':')) }}"
    configs:
      src: eas
      dest: eas
  fylr:
    image: "{{ easydb_docker_registry }}/pf/fylr"
    container_name: "{{ easydb_fylr_container_name }}"
    volumes:
      - "{{ easydb_volume_config }}:/config"
      - "{{ easydb_flyr_volume_objectstore }}:/objectstore"
    ports:
      - "{{ (easydb_fylr_hostname == 'easydb-fylr') | ternary(['127.0.0.1', easydb_fylr_port_ext, easydb_fylr_port_int] | join(':'), ['0.0.0.0', easydb_fylr_port_ext, easydb_fylr_port_int] | join(':')) }}"
    configs:
      src: fylr
      dest: fylr
  elasticsearch:
    image: "{{ easydb_docker_registry }}/pf/elasticsearch"
    container_name: "{{ easydb_elasticsearch_container_name }}"
    volumes:
      - "{{ easydb_volume_config }}:/config"
      - "{{ easydb_elasticsearch_volume_var }}:/var/lib/elasticsearch"
    ports:
      - "{{ (easydb_elasticsearch_hostname == 'easydb-elasticsearch') | ternary(['127.0.0.1', easydb_elasticsearch_port_ext, easydb_elasticsearch_port_int] | join(':'), ['0.0.0.0', easydb_elasticsearch_port_ext, easydb_elasticsearch_port_int] | join(':')) }}"
      - "{{ (easydb_elasticsearch_hostname == 'easydb-elasticsearch') | ternary(['127.0.0.1', easydb_elasticsearch_cluster_port_ext, easydb_elasticsearch_cluster_port_int] | join(':'), ['0.0.0.0', easydb_elasticsearch_cluster_port_ext, easydb_elasticsearch_cluster_port_int] | join(':')) }}"
    configs:
      src: elasticsearch
      dest: elasticsearch
  webfrontend:
    image: "{{ easydb_docker_registry }}/pf/webfrontend"
    container_name: "{{ easydb_webfrontend_container_name }}"
    volumes:
      - "{{ easydb_volume_config }}:/config"
    ports:
      - "{{ (easydb_webfrontend_hostname == 'easydb-webfrontend') | ternary(['127.0.0.1', easydb_webfrontend_port_ext, easydb_webfrontend_port_int] | join(':'), ['0.0.0.0', easydb_webfrontend_port_ext, easydb_webfrontend_port_int] | join(':')) }}"
    configs:
      src: server
      dest: easydb-server

# easydb server
easydb_solution: base
easydb_external_user_schema: true
easydb_server_database: easydb5
easydb_enable_post_settings: true
easydb_enable_restart: true
easydb_enable_purgedata: false
easydb_enable_purgeall: false
easydb_plugins_enabled:
  - base.easydb4migration
easydb_hotfolder_enabled: false
easydb_hotfolder_hostname: ''
easydb_hotfolder_unc_port: SSL
easydb_hotfolder_http_or_https: https
easydb_eas_instance_name: easydb5

# elasticsearch
easydb_max_map_count: 262144
easydb_es_memory_size: 2g
easydb_elasticsearch_cluster_enabled: no

# E-Mail
easydb_enable_mailer: true
easydb_mail_relay_for_ssmtp: ''
easydb_hostname_for_ssmtp: ''
easydb_envelope_from: ''

# webfrontend
easydb_datamodel_uid: ''
easydb_objectstore_url: https://schema.easydb.de/objectstore
easydb_objectstore_instance_id: prod

# PostgrSQL
# Space-separated list of db-names to dump with the script:
easydb_dump_dbs: "{{ easydb_eas_database }} {{ easydb_server_database }}"
# Of eas DB in $DBS keep this many newest dumps:
easydb_dump_keep: 7

# cron
# Where to write log messages to while doing update-auto in the script:
easydb_cron_update_log: /var/log/easydb-update.log
# Path to docker-compose executable:
# easydb_script_compose: '`which docker-compose 2>/dev/null`'
easydb_cron_update_minute: 23
easydb_cron_update_hour: 23
easydb_cron_update_weekday: 1,2,4,5,6,7
easydb_cron_update_script: "{{ easydb_basedir }}/maintain update-auto"
easydb_cron_backup_minute: 23
easydb_cron_backup_hour: 23
easydb_cron_backup_weekday: 3
easydb_cron_backup_script: "{{ easydb_basedir }}/maintain backup"

# logrotate
easydb_logrotate_logsize: "20M"
easydb_logrotate_maxage: 62
easydb_logrotate_rotate: 62

# EAS
easydb_eas_num_workers: 1
easydb_eas_num_soffice: 2
easydb_eas_num_services: 5
easydb_eas_trusted_net: "172.16.0.0/12"   # Source IP from connects from EasyDB server must be included.
easydb_eas_database: eas
easydb_eas_custom_version_enabled: false #When true, copy eas_rightsmanagement.yml and eas_produce.json to the target system
easydb_eas_watermark_enabled: false #When enabled, set the config option for watermark to true and copy the eas_rightsmanagement.yml and eas_produce.json to the target system

# SSO
easydb_ldap_config: ''
easydb_kerberos_config: ''
easydb_shibboleth_config: ''
