- include_tasks: checks.yml

- name: Configuring APT proxy
  when: easydb_proxy_url
  include_tasks: proxy.yml

- name: Obtaining APT GPG key
  apt_key:
    url: https://programmfabrik.de/files/pf-debian-2017.asc

- name: Adding Programmfabrik APT repository
  apt_repository:
    repo: deb http://archive.programmfabrik.de/ {{ ansible_lsb.codename }} main non-free

- name: Installing programmfabrik-keyring
  apt:
    pkg: programmfabrik-keyring
    state: present

- name: Installing easydb-maintenance
  apt:
    pkg: easydb5-maintenance
    state: present
    install_recommends: yes

- name: Deploy /etc/default/easydb5
  template:
    src: etc/default/easydb5.j2
    dest: /etc/default/easydb5
    owner: root
    group: root
    mode: 0644

- name: Install Python docker bindings
  apt:
    pkg: python-docker
    state: present
    update_cache: no
    install_recommends: no

- name: Logging in to docker registry
  docker_login:
    registry: "{{ easydb_docker_registry }}"
    username: "{{ easydb_docker_user }}"
    password: "{{ easydb_docker_pass }}"
    reauthorize: yes

# - name: Pulling docker images
#   docker_image:
#     name: "{{ easydb_docker_registry }}/pf/{{ image_item }}"
#   with_items: "{{ easydb_docker_images }}"
#   loop_control:
#     loop_var: image_item

- name: Adjust sysctl max-map-count
  sysctl:
    name: vm.max_map_count
    value: "{{ easydb_max_map_count }}"
    reload: yes

- name: Boilerplating directory sturcture
  file:
    path: "{{ file_item.path }}"
    owner: "{{ file_item.owner | default('root') }}"
    group: "{{ file_item.group | default('root') }}"
    mode: "{{ file_item.mode | default (0755) }}"
    state: directory
  loop_control:
    loop_var: file_item
  with_items:
    - path: "{{ easydb_basedir }}"
    - path: "{{ volume_config }}"
    - path: "{{ volume_eas_lib }}"
    - path: "{{ volume_eas_log }}"
    - path: "{{ volume_eas_tmp }}"
      mode: u=rwx,g=rwx,o=rwx,o+t
    - path: "{{ volume_elasticsearch_var }}"
      mode: u=rwx,g=rwx,o=rwx
    - path: "{{ volume_pgsql_etc }}"
    - path: "{{ volume_pgsql_var }}"
    - path: "{{ volume_pgsql_log }}"
    - path: "{{ volume_pgsql_backup }}"
    - path: "{{ volume_server_nginx_log }}"
      mode: u=rwx,g=rwx,o=rwx
    - path: "{{ volume_server_var }}"
    - path: "{{ volume_server_hotfolder }}"

- name: Creating initial configuration file
  template:
    src: srv/easydb/config/easydb5-master.yml.j2
    dest: "{{ volume_config }}/easydb5-master.yml"
    owner: root
    group: root
    mode: u=rw,g=r,o=r

- name: Deploying docker-compose.yml
  template:
    src: srv/easydb/docker-compose.yml.j2
    dest: "{{ easydb_basedir }}/docker-compose.yml"
    owner: root
    group: root
    mode: u=rw,g=r,o=r

- name: Deloying application stack
  docker_service:
    project_src: "{{ easydb_basedir }}"
    debug: yes
